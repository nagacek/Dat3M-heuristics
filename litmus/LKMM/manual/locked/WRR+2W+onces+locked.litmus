C WRR+2W+onces+locked
Cycle=Rfe PodRR Fre PodWW Wse
Relax=
Safe=Rfe Fre Wse PodWW PodRR
Prefetch=1:x=F,1:y=T,2:y=F,2:x=W
Com=Rf Fr Ws
Orig=Rfe PodRR Fre PodWW Wse

{}


P0(volatile int* x,spinlock_t* lock_x) {
  spin_lock(lock_x);
  WRITE_ONCE(*x,2);
  spin_unlock(lock_x);
}

P1(volatile int* y,spinlock_t* lock_y,volatile int* x,spinlock_t* lock_x) {
  spin_lock(lock_x);
  int r0 = READ_ONCE(*x);
  spin_unlock(lock_x);
  spin_lock(lock_y);
  int r1 = READ_ONCE(*y);
  spin_unlock(lock_y);
}

P2(volatile int* y,spinlock_t* lock_y,volatile int* x,spinlock_t* lock_x) {
  spin_lock(lock_y);
  WRITE_ONCE(*y,1);
  spin_unlock(lock_y);
  spin_lock(lock_x);
  WRITE_ONCE(*x,1);
  spin_unlock(lock_x);
}

exists (x=2 /\ 1:r0=2 /\ 1:r1=0)
