C Z6.2+onces+locked
Cycle=Rfe PodRW Rfe PodRW Wse PodWW
Relax=
Safe=Rfe Wse PodWW PodRW
Prefetch=0:x=F,0:y=W,1:y=F,1:z=W,2:z=F,2:x=W
Com=Rf Rf Ws
Orig=PodWW Rfe PodRW Rfe PodRW Wse

{}


P0(volatile int* y,spinlock_t* lock_y,volatile int* x,spinlock_t* lock_x) {
  spin_lock(lock_x);
  WRITE_ONCE(*x,2);
  spin_unlock(lock_x);
  spin_lock(lock_y);
  WRITE_ONCE(*y,1);
  spin_unlock(lock_y);
}

P1(volatile int* z,spinlock_t* lock_z,volatile int* y,spinlock_t* lock_y) {
  spin_lock(lock_y);
  int r0 = READ_ONCE(*y);
  spin_unlock(lock_y);
  spin_lock(lock_z);
  WRITE_ONCE(*z,1);
  spin_unlock(lock_z);
}

P2(volatile int* z,spinlock_t* lock_z,volatile int* x,spinlock_t* lock_x) {
  spin_lock(lock_z);
  int r0 = READ_ONCE(*z);
  spin_unlock(lock_z);
  spin_lock(lock_x);
  WRITE_ONCE(*x,1);
  spin_unlock(lock_x);
}

exists (x=2 /\ 1:r0=1 /\ 2:r0=1)
