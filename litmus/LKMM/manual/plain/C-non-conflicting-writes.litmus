C non-conflicting-writes

(*
 * Result: Sometimes DATARACE
 *
 * First, smp_wmb() isn't cumulative, so the result is allowed even when
 * all plain writes are convered to WRITE_ONCE().  Second, the read-to-write
 * optimization means that smp_wmb() does not necessarily order
 * plain writes.
 *)

{}

P0(int *x, int *y)
{
	*x = 1;
	smp_wmb();
	WRITE_ONCE(*y, 1);
}

P1(int *x, int *y)
{
	int r1;

	r1 = READ_ONCE(*y);
	if (r1 == 1) {
		WRITE_ONCE(*x, 2);
		smp_wmb();
		WRITE_ONCE(*y, 2);
	}
}

P2(int *x, int *y)
{
	int r2;
	int r3;

	r2 = READ_ONCE(*y);
	if (r2 == 2)
		*x = 3;
}

exists (1:r1=1 /\ 2:r2=2 /\ x=3)
