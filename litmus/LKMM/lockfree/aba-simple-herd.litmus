C aba-simple

Identical to aba-simple, but uses 0 address as a null pointer.
Zero address is valid in dartagnan, but not in herd, and herd disallows -1 here.

Initially, stack is a -> b -> c -> d

{
    d = 0;
    c = d;
    b = c;
    a = b;
    ToS = a;
}

P0(int* ToS)
{
    int top = smp_load_acquire(ToS);                /* read address of "a" */
    int next = smp_load_acquire(top);               /* read value of "a" = address of "b" */

                                                    /* assume context switch happens here */

    int old = atomic_cmpxchg(ToS, top, next);       /* write pointer to (deleted) "b" back to the stack */
}

P1(int* ToS)
{
    int top = smp_load_acquire(ToS);                /* read address of "a" */
    int next = smp_load_acquire(top);               /* read value of "a" = address of "b" */
    int old = atomic_cmpxchg(ToS, top, next);

    if(old == top){
                                                    /* Removed "a" from stack */
        int aPtr = top;                             /* save old address of "a" */

        top = smp_load_acquire(ToS);                /* read address of "b" */
        next = smp_load_acquire(top);               /* read value of "b" = address of "c" */
        old = atomic_cmpxchg(ToS, top, next);

        if(old == top){
            /* Removed "b" from stack */

            smp_store_release(top, 0);             /* emulate deletion of "b" */
            smp_store_release(aPtr, next);          /* write address of "c" as a value of "a" */
            old = atomic_cmpxchg(ToS, next, aPtr);  /* write updated "a" back to the stack */
        }
    }
}

exists (ToS = b /\ b = 0)

(* Invalid state: "b" is the only element of the stack, while the stack should be should be "c" -> "d" *)