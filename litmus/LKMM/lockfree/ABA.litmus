C Treiber
{
ToS = A;
Anext = B;
Bnext = null;
0:next = null;
1:next = null;
0:out0 = null;
1:out1 = null;
1:out2 = null;
}

P0(int *ToS, int *A, int *Anext, int *B, int *Bnext)
{
  top = smp_load_acquire(ToS);
  if(top == A) {
    next = *Anext;
  }
  if(top == B) {
    next = *Bnext;
  }
  r1 = atomic_cmpxchg(ToS, top, next);
  if(r1 == top) {
    out0 = top;
  }
}

P1(int *ToS, int *A, int *Anext, int *B, int *Bnext)
{
  top = smp_load_acquire(ToS);
  if(top == A) {
    next = *Anext;
  }
  if(top == B) {
    next = *Bnext;
  }
  r1 = atomic_cmpxchg(ToS, top, next);
  if(r1 == top) {
    out1 = top;
  }
  
  top = smp_load_acquire(ToS);
  if(top == A) {
    next = *Anext;
  }
  if(top == B) {
    next = *Bnext;
  }
  r1 = atomic_cmpxchg(ToS, top, next);
  if(r1 == top) {
    out2 = top;
  }
  
  top2 = READ_ONCE(*ToS);
  WRITE_ONCE(*Anext, top2);
  r2 = atomic_cmpxchg(ToS, top2, A);
}

exists (0:out0 = A /\ 1:out1 = A /\ ToS = B)