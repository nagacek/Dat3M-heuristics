C auto/C-WW-G+WW-R+WW-G+WW-G+WW-R+WW-R+WW-R
(*
 * Result: Sometimes
 * 
 * Process 0 starts (t=195994).
 * 
 * P0 advances one grace period (t=295994).
 * 
 * P1 goes back a bit less than one grace period (t=196995).
 * 
 * P2 advances one grace period (t=296996).
 * 
 * P3 advances one grace period (t=396997).
 * 
 * P4 goes back a bit less than one grace period (t=297998).
 * 
 * P5 goes back a bit less than one grace period (t=198999).
 * 
 * P6 goes back a bit less than one grace period (t=100000).
 * 
 * Process 0 start at t=195994, process 7 end at t=100000: Cycle allowed.
 *)
{
}

P0(intptr_t *x0, intptr_t *x1)
{
	WRITE_ONCE(*x0, 2);
	synchronize_rcu();
	WRITE_ONCE(*x1, 1);
}


P1(intptr_t *x1, intptr_t *x2)
{
	rcu_read_lock();
	WRITE_ONCE(*x1, 2);
	WRITE_ONCE(*x2, 1);
	rcu_read_unlock();
}


P2(intptr_t *x2, intptr_t *x3)
{
	WRITE_ONCE(*x2, 2);
	synchronize_rcu();
	WRITE_ONCE(*x3, 1);
}


P3(intptr_t *x3, intptr_t *x4)
{
	WRITE_ONCE(*x3, 2);
	synchronize_rcu();
	WRITE_ONCE(*x4, 1);
}


P4(intptr_t *x4, intptr_t *x5)
{
	rcu_read_lock();
	WRITE_ONCE(*x4, 2);
	WRITE_ONCE(*x5, 1);
	rcu_read_unlock();
}


P5(intptr_t *x5, intptr_t *x6)
{
	rcu_read_lock();
	WRITE_ONCE(*x5, 2);
	WRITE_ONCE(*x6, 1);
	rcu_read_unlock();
}


P6(intptr_t *x6, intptr_t *x0)
{
	rcu_read_lock();
	WRITE_ONCE(*x6, 2);
	WRITE_ONCE(*x0, 1);
	rcu_read_unlock();
}

exists
(x0=2 /\ x1=2 /\ x2=2 /\ x3=2 /\ x4=2 /\ x5=2 /\ x6=2)
