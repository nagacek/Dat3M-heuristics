C auto/C-LB-GWW+R-Oc+R-Oc+R-Oc+OB-OB
(*
 * Result: Never
 * 
 *)
{
}

P0(intptr_t *u0, intptr_t *x1)
{
	WRITE_ONCE(*u0, 3);
	smp_store_release(x1, 1);
}


P1(intptr_t *x1, intptr_t *x2)
{
	intptr_t r4=1;

	intptr_t r1 = READ_ONCE(*x1);
	r4 = (r1 == r4);
	if (r4) {
		smp_store_release(x2, 1);
	}
}


P2(intptr_t *x2, intptr_t *x3)
{
	intptr_t r4=1;

	intptr_t r1 = READ_ONCE(*x2);
	r4 = (r1 == r4);
	if (r4) {
		smp_store_release(x3, 1);
	}
}


P3(intptr_t *x3, intptr_t *x4)
{
	intptr_t r4=1;

	intptr_t r1 = READ_ONCE(*x3);
	r4 = (r1 == r4);
	if (r4) {
		smp_mb();
		WRITE_ONCE(*x4, 1);
	}
}


P4(intptr_t *v0, intptr_t *x4)
{
	intptr_t r1 = READ_ONCE(*x4);
	smp_mb();
	WRITE_ONCE(*v0, 1);
}


P5(intptr_t *u0, intptr_t *v0)
{
	intptr_t r1 = READ_ONCE(*v0);
	smp_mb();
	intptr_t r2 = READ_ONCE(*u0);
}

exists
(5:r1=1 /\ 5:r2=0 /\ 1:r1=1 /\ 2:r1=1 /\ 3:r1=1 /\ 4:r1=1)
