C auto/C-LB-LRW+R-Dd+OB-O+OB-O+R-Ok
(*
 * Result: Sometimes
 * P4 Ok,LRW: Never->Sometimes: No ordering
 *)
{
	x1=y1;
}

P0(intptr_t *u0, intptr_t *x1, intptr_t *x2)
{
	intptr_t r3=x2;

	intptr_t r1 = READ_ONCE(*u0);
	smp_store_release(x1, r3);
}


P1(intptr_t *x1)
{
	intptr_t r1 = (intptr_t)rcu_dereference(*(intptr_t **)x1);
	smp_mb();
	WRITE_ONCE(*(intptr_t *)r1, 1);
}


P2(intptr_t *x2, intptr_t *x3)
{
	intptr_t r1 = READ_ONCE(*x2);
	smp_mb();
	WRITE_ONCE(*x3, 1);
}


P3(intptr_t *x3, intptr_t *x4)
{
	intptr_t r1 = READ_ONCE(*x3);
	smp_store_release(x4, 1);
}


P4(intptr_t *x4, intptr_t *z4, intptr_t *u0)
{
	intptr_t r4=1;

	intptr_t r1 = READ_ONCE(*x4);
	r4 = (r1 == r4);
	if (r4) {
		r4 = READ_ONCE(*z4);
	}
	WRITE_ONCE(*u0, 1);
}

exists
(0:r1=1 /\ 1:r1=x2 /\ 2:r1=1 /\ 3:r1=1 /\ 4:r1=1)
