C auto/C-RW-Rr+RW-Ra+RW-R+RW-R+RW-R
(*
 * Result: Sometimes
 * 
 * Process 0 starts (t=396994).
 * 
 * P0 advances slightly (t=396995).
 * 
 * P1 advances slightly (t=396997).
 * 
 * P2 goes back a bit less than one grace period (t=297998).
 * 
 * P3 goes back a bit less than one grace period (t=198999).
 * 
 * P4 goes back a bit less than one grace period (t=100000).
 * 
 * Process 0 start at t=396994, process 5 end at t=100000: Cycle allowed.
 *)
{
}

P0(intptr_t *x0, intptr_t *x1)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x0);
	smp_store_release(x1, 1);
	rcu_read_unlock();
}


P1(intptr_t *x1, intptr_t *x2)
{
	rcu_read_lock();
	intptr_t r1 = smp_load_acquire(x1);
	WRITE_ONCE(*x2, 1);
	rcu_read_unlock();
}


P2(intptr_t *x2, intptr_t *x3)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x2);
	WRITE_ONCE(*x3, 1);
	rcu_read_unlock();
}


P3(intptr_t *x3, intptr_t *x4)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x3);
	WRITE_ONCE(*x4, 1);
	rcu_read_unlock();
}


P4(intptr_t *x0, intptr_t *x4)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x4);
	WRITE_ONCE(*x0, 1);
	rcu_read_unlock();
}

exists
(0:r1=1 /\ 1:r1=1 /\ 2:r1=1 /\ 3:r1=1 /\ 4:r1=1)
