C auto/C-RR-H+RR-R+RR-R+RR-G+RR-R
(*
 * Result: Never
 * 
 * Process 0 starts (t=100000).
 * 
 * P0 advances two grace periods (t=300000).
 * 
 * P1 goes back a bit less than one grace period (t=201001).
 * 
 * P2 goes back a bit less than one grace period (t=102002).
 * 
 * P3 advances one grace period (t=202003).
 * 
 * P4 goes back a bit less than one grace period (t=103004).
 * 
 * Process 0 start at t=100000, process 5 end at t=103004: Cycle forbidden.
 *)
{
}

P0(intptr_t *x0, intptr_t *x1)
{
	intptr_t r1 = READ_ONCE(*x0);
	synchronize_rcu();
	synchronize_rcu();
	intptr_t r2 = READ_ONCE(*x1);
}


P1(intptr_t *x1, intptr_t *x2)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x1);
	intptr_t r2 = READ_ONCE(*x2);
	rcu_read_unlock();
}


P2(intptr_t *x2, intptr_t *x3)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x2);
	intptr_t r2 = READ_ONCE(*x3);
	rcu_read_unlock();
}


P3(intptr_t *x3, intptr_t *x4)
{
	intptr_t r1 = READ_ONCE(*x3);
	synchronize_rcu();
	intptr_t r2 = READ_ONCE(*x4);
}


P4(intptr_t *x0, intptr_t *x4)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x4);
	intptr_t r2 = READ_ONCE(*x0);
	rcu_read_unlock();
}


P5(intptr_t *x0, intptr_t *x1, intptr_t *x2, intptr_t *x3, intptr_t *x4)
{
	WRITE_ONCE(*x0, 1);
	WRITE_ONCE(*x1, 1);
	WRITE_ONCE(*x2, 1);
	WRITE_ONCE(*x3, 1);
	WRITE_ONCE(*x4, 1);
}

exists
(4:r2=0 /\ 0:r1=1 /\ 0:r2=0 /\ 1:r1=1 /\ 1:r2=0 /\ 2:r1=1 /\ 2:r2=0 /\ 3:r1=1 /\ 3:r2=0 /\ 4:r1=1)
