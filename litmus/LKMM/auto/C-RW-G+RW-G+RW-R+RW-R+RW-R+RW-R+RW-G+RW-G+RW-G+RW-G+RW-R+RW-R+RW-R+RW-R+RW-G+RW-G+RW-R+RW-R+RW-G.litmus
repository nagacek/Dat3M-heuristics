C auto/C-RW-G+RW-G+RW-R+RW-R+RW-R+RW-R+RW-G+RW-G+RW-G+RW-G+RW-R+RW-R+RW-R+RW-R+RW-G+RW-G+RW-R+RW-R+RW-G
(*
 * Result: Sometimes
 * 
 * Process 0 starts (t=295995).
 * 
 * P0 advances one grace period (t=395995).
 * 
 * P1 advances one grace period (t=495996).
 * 
 * P2 goes back a bit less than one grace period (t=396997).
 * 
 * P3 goes back a bit less than one grace period (t=297998).
 * 
 * P4 goes back a bit less than one grace period (t=198999).
 * 
 * P5 goes back a bit less than one grace period (t=100000).
 * 
 * P6 advances one grace period (t=200001).
 * 
 * P7 advances one grace period (t=300002).
 * 
 * P8 advances one grace period (t=400003).
 * 
 * P9 advances one grace period (t=500004).
 * 
 * P10 goes back a bit less than one grace period (t=401005).
 * 
 * P11 goes back a bit less than one grace period (t=302006).
 * 
 * P12 goes back a bit less than one grace period (t=203007).
 * 
 * P13 goes back a bit less than one grace period (t=104008).
 * 
 * P14 advances one grace period (t=204009).
 * 
 * P15 advances one grace period (t=304010).
 * 
 * P16 goes back a bit less than one grace period (t=205011).
 * 
 * P17 goes back a bit less than one grace period (t=106012).
 * 
 * P18 advances one grace period (t=206013).
 * 
 * Process 0 start at t=295995, process 19 end at t=206013: Cycle allowed.
 *)
{
}

P0(intptr_t *x0, intptr_t *x1)
{
	intptr_t r1 = READ_ONCE(*x0);
	synchronize_rcu();
	WRITE_ONCE(*x1, 1);
}


P1(intptr_t *x1, intptr_t *x2)
{
	intptr_t r1 = READ_ONCE(*x1);
	synchronize_rcu();
	WRITE_ONCE(*x2, 1);
}


P2(intptr_t *x2, intptr_t *x3)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x2);
	WRITE_ONCE(*x3, 1);
	rcu_read_unlock();
}


P3(intptr_t *x3, intptr_t *x4)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x3);
	WRITE_ONCE(*x4, 1);
	rcu_read_unlock();
}


P4(intptr_t *x4, intptr_t *x5)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x4);
	WRITE_ONCE(*x5, 1);
	rcu_read_unlock();
}


P5(intptr_t *x5, intptr_t *x6)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x5);
	WRITE_ONCE(*x6, 1);
	rcu_read_unlock();
}


P6(intptr_t *x6, intptr_t *x7)
{
	intptr_t r1 = READ_ONCE(*x6);
	synchronize_rcu();
	WRITE_ONCE(*x7, 1);
}


P7(intptr_t *x7, intptr_t *x8)
{
	intptr_t r1 = READ_ONCE(*x7);
	synchronize_rcu();
	WRITE_ONCE(*x8, 1);
}


P8(intptr_t *x8, intptr_t *x9)
{
	intptr_t r1 = READ_ONCE(*x8);
	synchronize_rcu();
	WRITE_ONCE(*x9, 1);
}


P9(intptr_t *x9, intptr_t *x10)
{
	intptr_t r1 = READ_ONCE(*x9);
	synchronize_rcu();
	WRITE_ONCE(*x10, 1);
}


P10(intptr_t *x10, intptr_t *x11)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x10);
	WRITE_ONCE(*x11, 1);
	rcu_read_unlock();
}


P11(intptr_t *x11, intptr_t *x12)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x11);
	WRITE_ONCE(*x12, 1);
	rcu_read_unlock();
}


P12(intptr_t *x12, intptr_t *x13)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x12);
	WRITE_ONCE(*x13, 1);
	rcu_read_unlock();
}


P13(intptr_t *x13, intptr_t *x14)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x13);
	WRITE_ONCE(*x14, 1);
	rcu_read_unlock();
}


P14(intptr_t *x14, intptr_t *x15)
{
	intptr_t r1 = READ_ONCE(*x14);
	synchronize_rcu();
	WRITE_ONCE(*x15, 1);
}


P15(intptr_t *x15, intptr_t *x16)
{
	intptr_t r1 = READ_ONCE(*x15);
	synchronize_rcu();
	WRITE_ONCE(*x16, 1);
}


P16(intptr_t *x16, intptr_t *x17)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x16);
	WRITE_ONCE(*x17, 1);
	rcu_read_unlock();
}


P17(intptr_t *x17, intptr_t *x18)
{
	rcu_read_lock();
	intptr_t r1 = READ_ONCE(*x17);
	WRITE_ONCE(*x18, 1);
	rcu_read_unlock();
}


P18(intptr_t *x18, intptr_t *x0)
{
	intptr_t r1 = READ_ONCE(*x18);
	synchronize_rcu();
	WRITE_ONCE(*x0, 1);
}

exists
(0:r1=1 /\ 1:r1=1 /\ 2:r1=1 /\ 3:r1=1 /\ 4:r1=1 /\ 5:r1=1 /\ 6:r1=1 /\ 7:r1=1 /\ 8:r1=1 /\ 9:r1=1 /\ 10:r1=1 /\ 11:r1=1 /\ 12:r1=1 /\ 13:r1=1 /\ 14:r1=1 /\ 15:r1=1 /\ 16:r1=1 /\ 17:r1=1 /\ 18:r1=1)
